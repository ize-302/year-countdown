[{"/Users/ozorku/Work/Projects/web/year-countdown/src/index.tsx":"1","/Users/ozorku/Work/Projects/web/year-countdown/src/reportWebVitals.ts":"2","/Users/ozorku/Work/Projects/web/year-countdown/src/App.tsx":"3"},{"size":500,"mtime":1609181754653,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1609181754654,"results":"6","hashOfConfig":"5"},{"size":2538,"mtime":1609230074174,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"zb4l0m",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/ozorku/Work/Projects/web/year-countdown/src/index.tsx",[],["16","17"],"/Users/ozorku/Work/Projects/web/year-countdown/src/reportWebVitals.ts",[],"/Users/ozorku/Work/Projects/web/year-countdown/src/App.tsx",["18","19","20"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Box, Text, Flex, Heading, Progress, Stack } from \"@chakra-ui/react\";\nimport moment from \"moment\";\n\nfunction App() {\n  const [daysRemaining, setdaysRemaining] = useState(0);\n  const [daysPercentageGone, setdaysPercentageGone] = useState(0);\n\n  useEffect(() => {\n    setdaysRemaining(getRemainingDays());\n    setdaysPercentageGone(\n      daysPercentageGone < getPercentageOfDays()\n        ? daysPercentageGone + 1\n        : getPercentageOfDays()\n    );\n  }, [daysPercentageGone]);\n\n  const getRemainingDays = () => {\n    var now = moment(new Date()); //todays date\n    var endDate = moment().endOf(\"year\");\n    var duration = moment.duration(endDate.diff(now));\n    var days = duration.asDays();\n    return Math.round(days);\n  };\n\n  const getPercentageOfDays = () => {\n    let currentDay = moment().dayOfYear();\n    let totalDays = currentDay + getRemainingDays();\n    return (currentDay / totalDays) * 100;\n  };\n\n  return (\n    <ChakraProvider>\n      <Flex\n        justifyContent=\"center\"\n        height=\"100vh\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        width=\"100%\"\n      >\n        <Box maxWidth={380} width=\"90%\">\n          <Text textAlign=\"center\" fontFamily=\"Inter\">\n            Today's date is:\n          </Text>\n          <Text\n            fontSize={18}\n            fontWeight={600}\n            textAlign=\"center\"\n            fontFamily=\"Inter\"\n          >\n            {moment(new Date()).format(\"DD MMMM YYYY\")}\n          </Text>\n\n          <Heading\n            fontSize={96}\n            textAlign=\"center\"\n            marginTop={5}\n            fontFamily=\"Inter\"\n          >\n            {daysRemaining} Days\n          </Heading>\n          <Text\n            fontSize={24}\n            textAlign=\"center\"\n            marginTop={3}\n            fontFamily=\"Inter\"\n            fontWeight={800}\n          >\n            Till {moment().add(1, \"years\").format(\"YYYY\")}\n          </Text>\n\n          <Progress\n            marginTop={10}\n            marginBottom={5}\n            colorScheme=\"green\"\n            width=\"100%\"\n            height=\"10px\"\n            bg=\"red\"\n            value={daysPercentageGone}\n          />\n          <Text fontSize={14} textAlign=\"center\" fontFamily=\"Inter\">\n            {Math.round(daysPercentageGone * 100) / 100}% Complete\n          </Text>\n        </Box>\n      </Flex>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":2,"column":8,"nodeType":"27","messageId":"28","endLine":2,"endColumn":12},{"ruleId":"25","severity":1,"message":"29","line":5,"column":46,"nodeType":"27","messageId":"28","endLine":5,"endColumn":51},{"ruleId":"30","severity":1,"message":"31","line":19,"column":6,"nodeType":"32","endLine":19,"endColumn":26,"suggestions":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Stack' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPercentageOfDays'. Either include it or remove the dependency array.","ArrayExpression",["36"],"no-global-assign","no-unsafe-negation",{"desc":"37","fix":"38"},"Update the dependencies array to be: [daysPercentageGone, getPercentageOfDays]",{"range":"39","text":"40"},[619,639],"[daysPercentageGone, getPercentageOfDays]"]